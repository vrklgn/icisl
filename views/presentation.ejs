<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Quiz Scores</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/presentation.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=League+Spartan:wght@100..900&display=swap" rel="stylesheet">
</head>
<body>
<div style="position: relative; width: 100%; height: 0; padding-top: 56.2500%; padding-bottom: 0; box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); margin-top: 1.6em; margin-bottom: 0.9em; overflow: hidden; border-radius: 8px; will-change: transform;">  <iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; border: none; padding: 0;margin: 0;"    src="https://www.canva.com/design/DAGTEORkp90/TrDJMtph6K6EEvam0jNRbw/view?embed" allowfullscreen="allowfullscreen" allow="fullscreen">  </iframe></div><a href="https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAGTEORkp90&#x2F;TrDJMtph6K6EEvam0jNRbw&#x2F;view?utm_content=DAGTEORkp90&amp;utm_campaign=designshare&amp;utm_medium=embeds&amp;utm_source=link" target="_blank" rel="noopener">TEST</a> by Robert Levelind
  <!-- Each div represents a team's score section -->
  <div class="team team-a">
    <div class="team-name">teamA</div>
    <div class="team-score" id="teamA"><%= scores.teamA %></div>
  </div>
  <div class="team team-b">
    <div class="team-name">teamB</div>
    <div class="team-score" id="teamB"><%= scores.teamB %></div>
  </div>
  <div class="team team-c">
    <div class="team-name">teamC</div>
    <div class="team-score" id="teamC"><%= scores.teamC %></div>
  </div>


<script>
  // Function to fetch the latest scores and update the DOM with animation
  function fetchScores() {
    fetch('/scores')
      .then(response => response.json())
      .then(data => {
        updateScoreWithAnimation('teamA', data.teamA);
        updateScoreWithAnimation('teamB', data.teamB);
        updateScoreWithAnimation('teamC', data.teamC);
      })
      .catch(error => console.error('Error fetching scores:', error));
  }

  // Function to update the score and trigger the bounce animation
  function updateScoreWithAnimation(team, newScore) {
    const scoreElement = document.getElementById(`${team}`);
    
    // Check if the score has changed
    if (scoreElement.innerText != newScore) {
      scoreElement.innerText = newScore;
      
      // Add the bounce class to trigger the animation
      scoreElement.classList.add('bounce');

      // Remove the bounce class after the animation completes
      setTimeout(() => {
        scoreElement.classList.remove('bounce');
      }, 500); // Duration matches the animation duration (0.5s)
    }
  }

  // Fetch scores every 5 seconds and update the DOM
  setInterval(fetchScores, 3000);
</script>


</body>
</html>
